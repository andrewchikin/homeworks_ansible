---
- name: Install Clickhouse
  hosts: clickhouse
  tasks:
    - block:
        - name: Get clickhouse distrib try 1
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib try 2
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"

    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

  tags: clickhouse


- name: Install Vector
  hosts: vector
  gather_facts: false

  handlers:
    - name: Start Vector service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: vector.service
        state: started

  tasks:
    - block:
        - name: Vector. Create work directory
          ansible.builtin.file:
            path: "{{ vector_workdir }}"
            state: directory
            mode: 0755

        - name: Vector. Get Vector distributive
          ansible.builtin.get_url:
            url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vector_os_arh }}-unknown-linux-gnu.tar.gz"
            dest: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arh }}-unknown-linux-gnu.tar.gz"
            mode: 0644

        - name: Vector. Unzip archive
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arh }}-unknown-linux-gnu.tar.gz"
            dest: "{{ vector_workdir }}"

        - name: Vector. Install vector binary file
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arh }}-unknown-linux-gnu/bin/vector"
            dest: "/usr/bin/"
            mode: 0755
            owner: root
            group: root

        - name: Vector. Check Vector installation
          ansible.builtin.command: "vector --version"
          register: var_vector
          failed_when: var_vector.rc != 0
          changed_when: var_vector.rc == 0


        - name: Vector. Create etc directory
          become: true
          ansible.builtin.file:
            path: "/etc/vector"
            state: directory
            mode: 0755


        - name: Vector. Create Vector config vector.yaml
          become: true
          ansible.builtin.template:
            src: "templates/vector/vector.yaml.j2"
            dest: "/etc/vector/vector.yaml"

        - name: Vector. Create vector.service daemon
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arh }}-unknown-linux-gnu/etc/systemd/vector.service"
            dest: "/lib/systemd/system/"
            mode: "0644"
            owner: root
            group: root
          notify: Start Vector service

        - name: Vector. Modify vector.service file ExecStart
          become: true
          ansible.builtin.replace:
            backup: true
            path: "/lib/systemd/system/vector.service"
            regexp: "^ExecStartPre=/usr/bin/vector validate$"
            replace: "ExecStartPre=/usr/bin/vector validate --config-yaml /etc/vector/vector.yaml"
          notify: Start Vector service

        - name: Vector. Modify vector.service file ExecStartPre
          become: true
          ansible.builtin.replace:
            backup: true
            path: "/lib/systemd/system/vector.service"
            regexp: "^ExecStart=/usr/bin/vector$"
            replace: "ExecStart=/usr/bin/vector --config-yaml /etc/vector/vector.yaml"
          notify: Start Vector service

        - name: Vector. Create user vector
          become: true
          ansible.builtin.user:
            create_home: false
            name: "{{ vector_os_user }}"

        - name: Vector. Create data_dir
          become: true
          ansible.builtin.file:
            path: "{{ vector_data_dir }}"
            state: directory
            mode: "0755"
            owner: "{{ vector_os_user }}"
            group: "{{ vector_os_group }}"


        - name: Vector. Remove work directory
          ansible.builtin.file:
            path: "{{ vector_workdir }}"
            state: absent
      tags: vector


- name: Install Lighthouse
  hosts: lighthouse
  gather_facts: false

  handlers:
    - name: Start Lighthouse service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: nginx.service
        state: started

  tasks:
    - block:
        - name: Lighthouse. Pre-install nginx & git client
          become: true
          ansible.builtin.apt:
            name: "{{ lighthouse_packages }}"
            update_cache: true

        - name: Lighthouse. Clone source code by git client
          become: true
          ansible.builtin.git:
            repo: "{{ lighthouse_code_src }}"
            dest: "{{ lighthouse_data_dir }}"

        - name: Lighthouse. Prepare nginx config
          become: true
          ansible.builtin.template:
            src: "templates/nginx/ligthouse.conf.j2"
            dest: "/etc/nginx/conf.d/{{ lighthouse_nginx_conf }}"
            mode: "0644"
          notify: Start Lighthouse service

      tags: lighthouse
